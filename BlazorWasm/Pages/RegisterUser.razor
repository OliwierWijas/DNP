@page "/RegisterUser"
@using HttpClient.ClientInterfaces
@using global::Shared
@inject IUserService userService

<div class="card">
    <h3>RegisterUser</h3>
    <div class = form-group-field>
        <label>Username:</label>
        <input type="text" @bind=username @bind:event="oninput"/>
        <label>Password:</label>
        <input type="text" @bind="password" @bind:event="oninput"/>
        @if (!string.IsNullOrEmpty(message))
        {
            <label style="color: @color">@message</label>
        }
    </div>
    <div class="button-row">
        <button @onclick="Register" disabled="@(string.IsNullOrEmpty(username) || string.IsNullOrEmpty(password))" class="acceptbtn">Register</button>
    </div>
</div>


@code {
    private string username = "";
    private string password = "";
    private string message = "";
    private string color = "";
    
    private async Task Register()
    {
        message = "";
        try
        {
            await userService.RegisterAsync(new User(username, password));
            username = "";
            password = "";
            message = "Registered successfully";
            color = "green";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            message = e.Message;
            color = "red";
        }
    }
}